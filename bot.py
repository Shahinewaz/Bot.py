from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

# =====================
# Bot Configuration
# =====================
BOT_TOKEN = "8331836488:AAHRRCPePtRrAdgJyUWwSOrGqqfmWH0gR1g"
GROUP_LINK = "https://t.me/+JPbwhQwSfiBlN2Q1"
CONTACT = "@shahi_vai"
BANNER_URL = "https://i.ibb.co/ccvRwVBr/Gemini-Generated-Image-luotytluotytluot.png"  # direct image URL

# /start command
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_first_name = update.effective_user.first_name
    username = update.effective_user.username

    # Personalized greeting
    if username:
        greet_name = f"{user_first_name} (@{username})"
    else:
        greet_name = f"{user_first_name}"

    # Buttons
    keyboard = [
        [InlineKeyboardButton("‚úÖ JOIN", url=GROUP_LINK)],
        [InlineKeyboardButton("üí• JOINED", callback_data="joined")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # Caption text
    text = f"""
üì¢ Hello!!! Scammerü§® {greet_name}! üëã

Contact - {CONTACT}
Join our channel, click JOIN ‚úÖ
Then press JOINED after joining to /start chatting üí¨
"""

    # Send banner picture
    await update.message.reply_photo(
        photo=BANNER_URL,          # Picture ‡¶â‡¶™‡¶∞‡ßá
        caption=text,              # Caption picture ‡¶è‡¶∞ ‡¶®‡¶ø‡¶ö‡ßá
        parse_mode="Markdown",
        reply_markup=reply_markup  # Buttons caption ‡¶è‡¶∞ ‡¶®‡¶ø‡¶ö‡ßá
    )

# JOINED button click
async def button_click(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id

    try:
        chat_member = await context.bot.get_chat_member(chat_id=GROUP_LINK, user_id=user_id)
        if chat_member.status in ["member", "administrator", "creator"]:
            await query.message.reply_text(f"üéâ Thanks {query.from_user.first_name}! ‡¶è‡¶ñ‡¶® ‡¶§‡ßÅ‡¶Æ‡¶ø chat ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã‡•§")
        else:
            await query.message.reply_text("‚ö†Ô∏è ‡¶Ü‡¶ó‡ßá group join ‡¶ï‡¶∞‡ßã, ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ 'JOINED' ‡¶ö‡¶æ‡¶™‡ßã‡•§")
    except:
        await query.message.reply_text("‚ö†Ô∏è ‡¶Ü‡¶ó‡ßá group join ‡¶ï‡¶∞‡ßã, ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ 'JOINED' ‡¶ö‡¶æ‡¶™‡ßã‡•§")

# Run Bot
app = ApplicationBuilder().token(BOT_TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CallbackQueryHandler(button_click))
app.run_polling()